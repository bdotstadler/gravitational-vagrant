# Aug 26 2017

#####QUICK BRING UP#####
# Run the following to quickly bring up a fedora 26 atomic host image.
# This image under consideration for running Kubernetes.

# Create a default config for fedora 26 atomic host.  Config can be modded later.
vagrant init fedora/26-atomic-host

# Bring up the instace defined in the vagrant file.
vagrant up 

# destroy the instance
vagrant destroy


#####COMMANDS#####
# These notes are based on version 1.9.1 that is delivered with Fedora 26.  Not all commands listed
# in the Vagrant documentation available on the vagrant site are available with this version.  One
# notable example is the share command.

#####LOAD ORDER & MERGING#####
# Vagrant loads multiple vagrant files at run time and merges them to form a complete command set.
# 1) Your projects Vagrantfile
# 2) The Vagrantfile delivered in the box. Example, the fedora box image I am using delivered its
#    own Vagrantfile and that file specified the libvirt provider.  Unknown how it knew to use
#    libvirt.  I did not specify the libvirt image.  Possibly choosing based on what provider Vagrant
#    sees as installed.
# 3) The system wide Vagrantfile defined under the current user.  ~/.vagrant.d
#
# Under ~/.vagrant.d we see where the libvirt provider is defined.  Unknown what happens if I also
# install VirtualBox on the system. Later.
#
# Depending in the load order most settings are overridden.  However, networking for example, is
# appended.  This would explain the multiple networks I am seeing.
#
# Multiple Vagrant.configure blocks are allowed in a single file.
#


#####IMAGES#####
# Attempt to store this box for later use failed.  Unknown why.  Investigate later
# It does appear the image file is not downloaded again after the destroy process is complete.
  vagrant box add fedora/26-atmoic-host

# Images for libvirt are stored here locally for fedora 26 workstation
  /var/lib/libvirt/images/

# Vagrant images are not destroyed with the destroy command.  Use the following command to remove images.
  vagrant box remove


#####NETWORKING#####
# By default it appears libvirt is assigning networking resources using an internal schema
# on the localhost and NOT my networks DHCP service.  From the VM I can access external network resources.
# Some internal VM NATing must be occuring.  Will want to change this so VMs are fully accessible via network.
#
# OK yes, there are different networking schemes vagrant can use, default, private - appears to be default - and public.
#
# Caveat,boxes are not secure by default since vagrant has certain expectations for access to these devices.  Careful
# when using public networking.  See section security.

# SSH:
# Access to local VM can be done using the vagrant SSH command.  Will explore later how this works with multiple VMs.
  vagrant ssh

#####SECURITY#####
# Warning:  Vagrant images are very insecure by default.  Use care when exposing to the network. Else spin own image.
# Default root password is 'vagrant'.
# Default vagrant password is 'vagrant'.
# Vagrant user also accepts key based SSH authentication.  This allows for the vagrant ssh command to function.  This
# is a default key across ALL images supported by vagrant.
# Passwordless sudo.


#####FOLDER SYNC#####
# By default one folder is synced.  This is the default project folder with /home/vagrant/sync.  It appears current
# Vagrant documentation is incorrect.


#####CONFIG.VM#####
# config.vm.providor defines the VM providor, libvirt, virtualbox, and etc.


#####BOX UPDATES#####
# Vagrant will provide a message if there is a box update.  One must first destroy the current running instance and
# run 'vagrant box update' to aquire the new version.  Vagrant will not automatically remove older box versions.  Use
# 'vagrant box list' and 'vagrant box prune' to accomplish this.


